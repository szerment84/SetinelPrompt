# =================================================================
# Universal AI Security Testing Framework - Environment Variables
# =================================================================
# 
# IMPORTANT SECURITY NOTES:
# 1. Never commit this file with real API keys to version control
# 2. Add .env to your .gitignore file
# 3. Use a separate .env file for each environment (dev/test/prod)
# 4. Keep API keys secure and rotate them regularly

# =================================================================
# API CONFIGURATION (REQUIRED)
# =================================================================

# Together AI API Key - get from: https://api.together.xyz/settings/api-keys
# NEVER share this publicly or commit to git
API_TOGETHER=your_together_api_key_here

# Alternative API keys for other providers (uncomment if needed)
# OPENAI_API_KEY=your_openai_api_key_here
# ANTHROPIC_API_KEY=your_anthropic_api_key_here

# =================================================================
# MODEL CONFIGURATION
# =================================================================

# Model to test - any OpenAI-compatible model
MODEL_NAME=openai/gpt-oss-20b

# Alternative models (uncomment to use):
# MODEL_NAME=meta-llama/Llama-2-70b-chat-hf
# MODEL_NAME=mistralai/Mixtral-8x7B-Instruct-v0.1
# MODEL_NAME=NousResearch/Nous-Hermes-2-Mixtral-8x7B-DPO
# MODEL_NAME=gpt-3.5-turbo
# MODEL_NAME=gpt-4

# API Base URL - change for different providers
API_BASE_URL=https://api.together.xyz

# Alternative endpoints (uncomment to use):
# API_BASE_URL=https://api.openai.com
# API_BASE_URL=http://localhost:5000  # For local models
# API_BASE_URL=https://api.anthropic.com

# =================================================================
# TEST CONFIGURATION
# =================================================================

# Number of test repetitions per attack (recommended: 10-50)
REPEATS=25

# Path to attacks configuration file
ATTACKS_CONFIG=attacks_config.json

# Output directory for results
OUTPUT_DIR=security_test_output

# =================================================================
# ADVANCED SETTINGS (OPTIONAL)
# =================================================================

# Logging level (DEBUG, INFO, WARNING, ERROR)
LOG_LEVEL=INFO

# Request timeout in seconds
API_TIMEOUT=120

# Enable/disable specific attack categories (comma-separated)
# ATTACK_CATEGORIES=reward_hacking,deception,sandbagging

# Custom temperature ranges (comma-separated)
# TEMPERATURES=0.1,0.3,0.7,0.9

# Maximum tokens per request
# MAX_TOKENS=2048

# =================================================================
# KAGGLE/COLAB SPECIFIC (if running in notebooks)
# =================================================================

# Kaggle secrets (alternative to API_TOGETHER)
# KAGGLE_SECRET_NAME=API_TOGETHER

# Google Colab drive mount path
# COLAB_DRIVE_PATH=/content/drive/MyDrive

# =================================================================
# EXAMPLE CONFIGURATIONS FOR DIFFERENT SCENARIOS
# =================================================================

# --- Local Development ---
# API_TOGETHER=your_dev_api_key
# MODEL_NAME=openai/gpt-oss-20b
# REPEATS=10
# LOG_LEVEL=DEBUG

# --- Production Testing ---
# API_TOGETHER=your_prod_api_key
# MODEL_NAME=openai/gpt-oss-20b
# REPEATS=50
# LOG_LEVEL=INFO

# --- Testing Local Model ---
# API_BASE_URL=http://localhost:5000
# MODEL_NAME=local-model
# API_TOGETHER=dummy_key_for_local

# =================================================================
# USAGE INSTRUCTIONS
# =================================================================
#
# 1. Copy this file to .env in your project root
# 2. Fill in your actual API key for API_TOGETHER
# 3. Adjust MODEL_NAME and other settings as needed
# 4. Make sure .env is in your .gitignore file
# 5. Load with: python-dotenv or source .env
#
# To use in Python:
# from dotenv import load_dotenv
# load_dotenv()
# api_key = os.getenv('API_TOGETHER')
#